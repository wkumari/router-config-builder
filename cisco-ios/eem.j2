event manager applet reset-port authorization bypass
  event syslog pattern "LINK-3-UPDOWN.*Interface .*{{ downlink_ethernet_name }}.*changed state to down"
  action 001 regexp "Interface ([^,]+)" "$_syslog_msg" match intf
  action 002 cli command "enable"
  action 003 cli command "show int $intf | inc Description:"
  action 004 regexp "Description: STATIC:" "$_cli_result"
  action 005 if $_regexp_result eq "1"
  action 006  exit 0
  action 007 end
  action 008 regexp "Description: (Was )*([^\n\[]+)" "$_cli_result" match ignore descr
  action 009 set idescr "default"
  action 010 if $_regexp_result eq "1"
  action 011  string trim "$descr"
  action 012  if $_string_result ne "default"
  action 013   set idescr "Was $_string_result [last seen: $_event_pub_time]"
  action 014  end
  action 015 end
  action 016 cli command "config t"
  action 017 cli command "interface $intf"
  action 018 cli command "description $idescr"
  action 027 cli command "end"
  action 028 cli command "write mem"
 event manager applet detect-ap authorization bypass
  event tag nd neighbor-discovery interface regexp ^{{ downlink_ethernet_name }} cdp add maxrun 45
  event tag timer timer watchdog time 60
  trigger
   correlate event nd or event timer
  action 001 cli command "enable"
  action 002 set intfs ""
  action 003 if $_event_type_string eq "timer watchdog"
  action 004  cli command "show int status | inc connected"
  action 005  set cres "$_cli_result"
  action 006  foreach line "$cres" "\n"
  action 007   regexp "^([^[:space:]]+)[[:space:]]" "$line" match intf
  action 008   if $_regexp_result eq "1"
  action 009    cli command "show lldp neighbor $intf detail"
  action 010    set lcres "$_cli_result"
  action 011    set port_id ""
  action 012    set sys_name "-"
  action 013    set plat "UNKNOWN"
  action 014    regexp "Port id: ([^[:space:]]+)" "$lcres" match port_id
  action 015    regexp "System Name: ([^[:space:]]+)" "$lcres" match sys_name
  action 016    regexp "K9W7-" "$lcres"
  action 017    if $_regexp_result eq "1"
  action 018     set plat "AP"
  action 019    else
  action 020     regexp "K9W8-" "$lcres"
  action 021     if $_regexp_result eq "1"
  action 022      set plat "LWAP"
  action 023     else
  action 024      regexp "C3560E Software|C3560C Software|C3560CX Software|Catalyst 4500 L3 Switch[[:space:]]+Software|Catalyst L3 Switch Software|AIR-CT5520-K9" "$lcres"
  action 025      if $_regexp_result eq "1"
  action 026       set plat "SWITCH"
  action 027      else
  action 028       regexp "IETF_Probe:([^[:space:]]+)" "$lcres" match hn
  action 029       if $_regexp_result eq "1"
  action 030        set plat "PROBE"
  action 031        set sys_name "$hn"
  action 032       else
  action 033        regexp "mx80 internet router|UBNT EdgeRouter" "$lcres"
  action 034        if $_regexp_result eq "1"
  action 035         set plat "ROUTER"
  action 036        else
  action 037         regexp "NAT64" "$lcres"
  action 038         if $_regexp_result eq "1"
  action 039          set plat "ROUTER"
  action 040         else
  action 041          regexp "Debian GNU" "$lcres"
  action 042          if $_regexp_result eq "1"
  action 043           set plat "SERVER"
  action 044          else
  action 045           set plat "DEVICE"
  action 046          end
  action 047         end
  action 048        end
  action 049       end
  action 050      end
  action 051     end
  action 052    end
  action 053    append intfs " $intf~$port_id~$sys_name~$plat"
  action 054   end
  action 055  end
  action 056 else
  action 057  regexp "K9W7-" "$_nd_cdp_version"
  action 058  set plat "UNKNOWN"
  action 059  if $_regexp_result eq "1"
  action 060   set plat "AP"
  action 061  else
  action 062   regexp "K9W8-" "$_nd_cdp_version"
  action 063   if $_regexp_result eq "1"
  action 064    set plat "LWAP"
  action 065   else
  action 066    regexp "cisco (WS-C3560CG-8PC-S|WS-C3560X|WS-C3560CX-12PD-S|WS-C3850|C9500|C9300)" "$_nd_cdp_platform"
  action 067    if $_regexp_result eq "1"
  action 068     set plat "SWITCH"
  action 069    end
  action 070   end
  action 071  end
  action 072  set intfs "$_nd_local_intf_name~$_nd_port_id~$_nd_cdp_entry_name~$plat"
  action 073 end
  action 074 string trim "$intfs"
  action 075 cli command "config t"
  action 076 set config_change "0"
  action 077 foreach intf "$_string_result"
  action 078  regexp "^([^~]+)~([^~]*)~(.*)" "$intf" match lif pid rest
  action 079  regexp "^([^~]*)~([^~]*)" "$rest" match sysn plat
  action 080  cli command "do show interface $lif | inc Description:"
  action 081  regexp "Description: STATIC:" "$_cli_result"
  action 082  if $_regexp_result eq "1"
  action 083   continue
  action 084  end
  action 085  set cdescr ""
  action 086  regexp "Description: ([^\n]+)" "$_cli_result" match cdescr
  action 087  string trim "$cdescr"
  action 088  set cdescr "$_string_result"
  action 089  if $plat eq "AP"
  action 090   syslog priority notifications msg "$sysn"
  action 091   if $cdescr ne "AP : $sysn:$pid"
  action 092    cli command "interface $lif"
  action 093    cli command "description AP : $sysn:$pid"
  action 094    set config_change "1"
  action 095   end
  action 096  else
  action 097   if $plat eq "LWAP"
  action 098    if $cdescr ne "AP : $sysn:$pid"
  action 099     cli command "int $lif"
  action 100     cli command "description AP : $sysn:$pid"
  action 101     set config_change "1"
  action 102    end
  action 103   end
  action 104  end
  action 105  if $plat eq "SWITCH"
  action 106   if $cdescr ne "Core : $sysn:$pid"
  action 107    cli command "interface $lif"
  action 108    cli command "description Core : $sysn:$pid"
  action 112    set config_change "1"
  action 113   end
  action 137  else
  action 138   if $plat eq "PROBE"
  action 139    if $cdescr ne "Probe : $sysn:$pid"
  action 140     cli command "interface $lif"
  action 141     cli command "description Probe : $sysn:$pid"
  action 142     set config_change "1"
  action 143    end
  action 144   else
  action 145    if $plat eq "ROUTER"
  action 146     if $cdescr ne "Core : $sysn:$pid"
  action 147      cli command "interface $lif"
  action 148      cli command "description Core : $sysn:$pid"
  action 149      set config_change "1"
  action 150     end
  action 151    else
  action 152     if $plat eq "SERVER"
  action 153      if $cdescr ne "Core : $sysn:$pid"
  action 154       cli command "interface $lif"
  action 155       cli command "description Core : $sysn:$pid"
  action 156       set config_change "1"
  action 157      end
  action 158     else
  action 159      if $plat eq "DEVICE"
  action 160       if $sysn ne "-"
  action 161        if $cdescr ne "Generic : $sysn:$pid"
  action 162         cli command "interface $lif"
  action 163         cli command "description Generic : $sysn:$pid"
  action 164         set config_change "1"
  action 165        end
  action 166       end
  action 167      end
  action 168     end
  action 169    end
  action 170   end
  action 171  end
  action 172 end
  action 173 cli command "end"
  action 174 if $config_change eq "1"
  action 175  cli command "write mem"
  action 176 end